APTCACHEHARDLINK=no

HOOKDIR="/var/cache/pbuilder/hook.d/"
AUTO_DEBSIGN=${AUTO_DEBSIGN:-yes}

# create images using these commands
# sudo /usr/sbin/pbuilder create --debootstrapopts --variant=buildd --basetgz /var/cache/pbuilder/wheezy-amd64-base.tgz --distribution wheezy
#
# pdebuild acts like debuild, a wrapper for pbuilder
# pbuild is a python script written by canonical; not well documented
#
# update
# sudo pbuilder --basetgz /var/cache/pbuilder/x-amd64-base.tgz --distribution x update
# --override-config is important if changing COMPONENTS
# setup /etc/fstab with this
#tmpfs           /var/cache/pbuilder/build               tmpfs        defaults,size=2400M        0       0
# make use of packages mini-dinstall and config .dput.cf
# dput local foo*.changes
# which puts them in /var/cache/archive/mini-dinstall/incoming
#
# example
#
# dget http://ftp.de.debian.org/debian/pool/main/g/grub2/grub2_2.00-17.dsc
# cd grub2-2.00-17
# pdebuild
#

# changes INSIDE *-base.tgz
# echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup
#
# # Innstall eatmydata in new chroots (will cause chroot creation failure for pre-maverick chroots)
#EXTRAPACKAGES=eatmydata
#export LD_PRELOAD="${LD_PRELOAD:+$LD_PRELOAD:}/usr/lib/libeatmydata/libeatmydata.so"

# ccache
#sudo mkdir -p /var/cache/pbuilder/ccache
#sudo chmod a+w /var/cache/pbuilder/ccache
export CCACHE_DIR="/var/cache/pbuilder/ccache"
export PATH="/usr/lib/ccache:${PATH}"
EXTRAPACKAGES=ccache
BINDMOUNTS="${CCACHE_DIR}"

COMPONENTS="main contrib non-free"
#COMPONENTS="main restricted universe multiverse"

#if [ "$DIST" == "squeeze" ]; then
#    echo "Using a Debian pbuilder environment because DIST is $DIST"
#    COMPONENTS="main contrib non-free"
#fi

# Codenames for Debian suites according to their alias. Update these when
# needed.
UNSTABLE_CODENAME="sid"
TESTING_CODENAME="jessie"
STABLE_CODENAME="wheezy"
STABLE_BACKPORTS_SUITE="$STABLE_CODENAME-backports"

# List of Debian suites.
DEBIAN_SUITES=($UNSTABLE_CODENAME $TESTING_CODENAME $STABLE_CODENAME
    "unstable" "testing" "stable")

# List of Ubuntu suites. Update these when needed.
UBUNTU_SUITES=("saucy" "raring" "quantal" "precise")

# Mirrors to use. Update these to your preferred mirror.
DEBIAN_MIRROR="ftp.us.debian.org"
UBUNTU_MIRROR="mirrors.kernel.org"

# Optionally set a default distribution if none is used. Note that you can set
# your own default (i.e. ${DIST:="unstable"}).
: ${DIST:="$(lsb_release --short --codename)"}

# Optionally change Debian release states in $DIST to their names.
case "$DIST" in
    unstable)
        DIST="$UNSTABLE_CODENAME"
        ;;
    testing)
        DIST="$TESTING_CODENAME"
        ;;
    stable)
        DIST="$STABLE_CODENAME"
        ;;
esac

# Optionally set the architecture to the host architecture if none set. Note
# that you can set your own default (i.e. ${ARCH:="i386"}).
: ${ARCH:="$(dpkg --print-architecture)"}

NAME="$NAME-$ARCH"
DEBOOTSTRAPOPTS=("--arch" "$ARCH" "${DEBOOTSTRAPOPTS[@]}")

BASETGZ="/var/cache/pbuilder/$NAME-base.tgz"
# Optionally, set BASEPATH (and not BASETGZ) if using cowbuilder
# BASEPATH="/var/cache/pbuilder/$NAME/base.cow/"
DISTRIBUTION="$DIST"
BUILDRESULT="/var/cache/pbuilder/$NAME/result/"
APTCACHE="/var/cache/pbuilder/$NAME/aptcache/"
BUILDPLACE="/var/cache/pbuilder/build/"
BINDMOUNTS="/var/cache/archive"

if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    COMPONENTS="main contrib non-free"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/debian-archive-keyring.gpg")
    OTHERMIRROR="deb file:///var/cache/archive $DIST/"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    COMPONENTS="main restricted universe multiverse"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg")
    OTHERMIRROR="deb file:///var/cache/archive $DIST/"
else
    echo "Unknown distribution: $DIST"
    exit 1
fi

